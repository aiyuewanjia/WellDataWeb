{"remainingRequest":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/babel-loader/lib/index.js!/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@jiaminghi/data-view/lib/components/activeRingChart/src/main.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@jiaminghi/data-view/lib/components/activeRingChart/src/main.vue","mtime":499162500000},{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@jiaminghi/data-view/lib/components/activeRingChart/src/main.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"dv-active-ring-chart\">\n    <div class=\"active-ring-chart-container\" ref=\"active-ring-chart\" />\n    <div class=\"active-ring-info\">\n      <dv-digital-flop :config=\"digitalFlop\" />\n      <div class=\"active-ring-name\" :style=\"fontSize\">{{ ringName }}</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Charts from '@jiaminghi/charts'\n\nimport dvDigitalFlop from '../../digitalFlop/src/main.vue'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvActiveRingChart',\n  components: {\n    dvDigitalFlop\n  },\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    return {\n      defaultConfig: {\n        /**\n         * @description Ring radius\n         * @type {String|Number}\n         * @default radius = '50%'\n         * @example radius = '50%' | 100\n         */\n        radius: '50%',\n        /**\n         * @description Active ring radius\n         * @type {String|Number}\n         * @default activeRadius = '55%'\n         * @example activeRadius = '55%' | 110\n         */\n        activeRadius: '55%',\n        /**\n         * @description Ring data\n         * @type {Array<Object>}\n         * @default data = [{ name: '', value: 0 }]\n         */\n        data: [{ name: '', value: 0 }],\n        /**\n         * @description Ring line width\n         * @type {Number}\n         * @default lineWidth = 20\n         */\n        lineWidth: 20,\n        /**\n         * @description Active time gap (ms)\n         * @type {Number}\n         * @default activeTimeGap = 3000\n         */\n        activeTimeGap: 3000,\n        /**\n         * @description Ring color (hex|rgb|rgba|color keywords)\n         * @type {Array<String>}\n         * @default color = [Charts Default Color]\n         * @example color = ['#000', 'rgb(0, 0, 0)', 'rgba(0, 0, 0, 1)', 'red']\n         */\n        color: [],\n        /**\n         * @description Digital flop style\n         * @type {Object}\n         */\n        digitalFlopStyle: {\n          fontSize: 25,\n          fill: '#fff'\n        },\n        /**\n         * @description Digital flop toFixed\n         * @type {Number}\n         */\n        digitalFlopToFixed: 0,\n        /**\n         * @description Digital flop unit\n         * @type {String}\n         */\n        digitalFlopUnit: '',\n        /**\n         * @description CRender animationCurve\n         * @type {String}\n         * @default animationCurve = 'easeOutCubic'\n         */\n        animationCurve: 'easeOutCubic',\n        /**\n         * @description CRender animationFrame\n         * @type {String}\n         * @default animationFrame = 50\n         */\n        animationFrame: 50,\n        /**\n         * @description showOriginValue\n         * @type {Boolean}\n         * @default showOriginValue = false\n         */\n        showOriginValue: false\n      },\n\n      mergedConfig: null,\n\n      chart: null,\n\n      activeIndex: 0,\n\n      animationHandler: ''\n    }\n  },\n  computed: {\n    digitalFlop() {\n      const { mergedConfig, activeIndex } = this\n\n      if (!mergedConfig) return {}\n\n      const {\n        digitalFlopStyle,\n        digitalFlopToFixed,\n        data,\n        showOriginValue,\n        digitalFlopUnit\n      } = mergedConfig\n\n      const value = data.map(({ value }) => value)\n\n      let displayValue\n\n      if (showOriginValue) {\n        displayValue = value[activeIndex]\n      } else {\n        const sum = value.reduce((all, v) => all + v, 0)\n\n        const percent = parseFloat((value[activeIndex] / sum) * 100) || 0\n\n        displayValue = percent\n      }\n\n      return {\n        content: showOriginValue ? `{nt}${digitalFlopUnit}` : `{nt}${digitalFlopUnit || '%'}`,\n        number: [displayValue],\n        style: digitalFlopStyle,\n        toFixed: digitalFlopToFixed\n      }\n    },\n    ringName() {\n      const { mergedConfig, activeIndex } = this\n\n      if (!mergedConfig) return ''\n\n      return mergedConfig.data[activeIndex].name\n    },\n    fontSize() {\n      const { mergedConfig } = this\n\n      if (!mergedConfig) return ''\n\n      return `font-size: ${mergedConfig.digitalFlopStyle.fontSize}px;`\n    }\n  },\n  watch: {\n    config() {\n      const { animationHandler, mergeConfig, setRingOption } = this\n\n      clearTimeout(animationHandler)\n\n      this.activeIndex = 0\n\n      mergeConfig()\n\n      setRingOption()\n    }\n  },\n  methods: {\n    init() {\n      const { initChart, mergeConfig, setRingOption } = this\n\n      initChart()\n\n      mergeConfig()\n\n      setRingOption()\n    },\n    initChart() {\n      const { $refs } = this\n\n      this.chart = new Charts($refs['active-ring-chart'])\n    },\n    mergeConfig() {\n      const { defaultConfig, config } = this\n\n      this.mergedConfig = deepMerge(\n        deepClone(defaultConfig, true),\n        config || {}\n      )\n    },\n    setRingOption() {\n      const { getRingOption, chart, ringAnimation } = this\n\n      const option = getRingOption()\n\n      chart.setOption(option, true)\n\n      ringAnimation()\n    },\n    getRingOption() {\n      const { mergedConfig, getRealRadius } = this\n\n      const radius = getRealRadius()\n\n      mergedConfig.data.forEach(dataItem => {\n        dataItem.radius = radius\n      })\n\n      return {\n        series: [\n          {\n            type: 'pie',\n            ...mergedConfig,\n            outsideLabel: {\n              show: false\n            }\n          }\n        ],\n        color: mergedConfig.color\n      }\n    },\n    getRealRadius(active = false) {\n      const { mergedConfig, chart } = this\n\n      const { radius, activeRadius, lineWidth } = mergedConfig\n\n      const maxRadius = Math.min(...chart.render.area) / 2\n\n      const halfLineWidth = lineWidth / 2\n\n      let realRadius = active ? activeRadius : radius\n\n      if (typeof realRadius !== 'number')\n        realRadius = (parseInt(realRadius) / 100) * maxRadius\n\n      const insideRadius = realRadius - halfLineWidth\n      const outSideRadius = realRadius + halfLineWidth\n\n      return [insideRadius, outSideRadius]\n    },\n    ringAnimation() {\n      let { activeIndex, getRingOption, chart, getRealRadius } = this\n\n      const radius = getRealRadius()\n      const active = getRealRadius(true)\n\n      const option = getRingOption()\n\n      const { data } = option.series[0]\n\n      data.forEach((dataItem, i) => {\n        if (i === activeIndex) {\n          dataItem.radius = active\n        } else {\n          dataItem.radius = radius\n        }\n      })\n\n      chart.setOption(option, true)\n\n      const { activeTimeGap } = option.series[0]\n\n      this.animationHandler = setTimeout(foo => {\n        activeIndex += 1\n\n        if (activeIndex >= data.length) activeIndex = 0\n\n        this.activeIndex = activeIndex\n\n        this.ringAnimation()\n      }, activeTimeGap)\n    }\n  },\n  mounted() {\n    const { init } = this\n\n    init()\n  },\n  beforeDestroy() {\n    const { animationHandler } = this\n\n    clearTimeout(animationHandler)\n  }\n}\n</script>"],"sourceRoot":""}]}