{"remainingRequest":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/babel-loader/lib/index.js!/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@jiaminghi/data-view/lib/components/borderBox2/src/main.vue?vue&type=template&id=f6e27310","dependencies":[{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@jiaminghi/data-view/lib/components/borderBox2/src/main.vue","mtime":499162500000},{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCByZW5kZXJTbG90IGFzIF9yZW5kZXJTbG90IH0gZnJvbSAidnVlIjsKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJib3JkZXItYm94LWNvbnRlbnQiCn07CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJkaXYiLCB7CiAgICBjbGFzczogImR2LWJvcmRlci1ib3gtMiIsCiAgICByZWY6ICRkYXRhLnJlZgogIH0sIFsoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soInN2ZyIsIHsKICAgIGNsYXNzOiAiZHYtYm9yZGVyLXN2Zy1jb250YWluZXIiLAogICAgd2lkdGg6IF9jdHgud2lkdGgsCiAgICBoZWlnaHQ6IF9jdHguaGVpZ2h0CiAgfSwgW19jcmVhdGVWTm9kZSgicG9seWdvbiIsIHsKICAgIGZpbGw6ICRwcm9wcy5iYWNrZ3JvdW5kQ29sb3IsCiAgICBwb2ludHM6ICJcbiAgICAgICAgNywgNyAiLmNvbmNhdChfY3R4LndpZHRoIC0gNywgIiwgNyAiKS5jb25jYXQoX2N0eC53aWR0aCAtIDcsICIsICIpLmNvbmNhdChfY3R4LmhlaWdodCAtIDcsICIgNywgIikuY29uY2F0KF9jdHguaGVpZ2h0IC0gNywgIlxuICAgICAgIikKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsiZmlsbCIsICJwb2ludHMiXSksIF9jcmVhdGVWTm9kZSgicG9seWxpbmUiLCB7CiAgICBzdHJva2U6ICRkYXRhLm1lcmdlZENvbG9yWzBdLAogICAgcG9pbnRzOiAiMiwgMiAiLmNvbmNhdChfY3R4LndpZHRoIC0gMiwgIiAsMiAiKS5jb25jYXQoX2N0eC53aWR0aCAtIDIsICIsICIpLmNvbmNhdChfY3R4LmhlaWdodCAtIDIsICIgMiwgIikuY29uY2F0KF9jdHguaGVpZ2h0IC0gMiwgIiAyLCAyIikKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsic3Ryb2tlIiwgInBvaW50cyJdKSwgX2NyZWF0ZVZOb2RlKCJwb2x5bGluZSIsIHsKICAgIHN0cm9rZTogJGRhdGEubWVyZ2VkQ29sb3JbMV0sCiAgICBwb2ludHM6ICI2LCA2ICIuY29uY2F0KF9jdHgud2lkdGggLSA2LCAiLCA2ICIpLmNvbmNhdChfY3R4LndpZHRoIC0gNiwgIiwgIikuY29uY2F0KF9jdHguaGVpZ2h0IC0gNiwgIiA2LCAiKS5jb25jYXQoX2N0eC5oZWlnaHQgLSA2LCAiIDYsIDYiKQogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJzdHJva2UiLCAicG9pbnRzIl0pLCBfY3JlYXRlVk5vZGUoImNpcmNsZSIsIHsKICAgIGZpbGw6ICRkYXRhLm1lcmdlZENvbG9yWzBdLAogICAgY3g6ICIxMSIsCiAgICBjeTogIjExIiwKICAgIHI6ICIxIgogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJmaWxsIl0pLCBfY3JlYXRlVk5vZGUoImNpcmNsZSIsIHsKICAgIGZpbGw6ICRkYXRhLm1lcmdlZENvbG9yWzBdLAogICAgY3g6IF9jdHgud2lkdGggLSAxMSwKICAgIGN5OiAiMTEiLAogICAgcjogIjEiCiAgfSwgbnVsbCwgOAogIC8qIFBST1BTICovCiAgLCBbImZpbGwiLCAiY3giXSksIF9jcmVhdGVWTm9kZSgiY2lyY2xlIiwgewogICAgZmlsbDogJGRhdGEubWVyZ2VkQ29sb3JbMF0sCiAgICBjeDogX2N0eC53aWR0aCAtIDExLAogICAgY3k6IF9jdHguaGVpZ2h0IC0gMTEsCiAgICByOiAiMSIKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsiZmlsbCIsICJjeCIsICJjeSJdKSwgX2NyZWF0ZVZOb2RlKCJjaXJjbGUiLCB7CiAgICBmaWxsOiAkZGF0YS5tZXJnZWRDb2xvclswXSwKICAgIGN4OiAiMTEiLAogICAgY3k6IF9jdHguaGVpZ2h0IC0gMTEsCiAgICByOiAiMSIKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsiZmlsbCIsICJjeSJdKV0sIDgKICAvKiBQUk9QUyAqLwogICwgWyJ3aWR0aCIsICJoZWlnaHQiXSkpLCBfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzEsIFtfcmVuZGVyU2xvdChfY3R4LiRzbG90cywgImRlZmF1bHQiKV0pXSwgNTEyCiAgLyogTkVFRF9QQVRDSCAqLwogICk7Cn0="},{"version":3,"sources":["/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@jiaminghi/data-view/lib/components/borderBox2/src/main.vue"],"names":[],"mappings":";;;AAqBS,EAAA,KAAK,EAAC;;;uBApBb,YAAA,CAuBM,KAvBN,EAuBM;AAvBD,IAAA,KAAK,EAAC,iBAuBL;AAvBwB,IAAA,GAAG,EAAE,KAAA,CAAA;AAuB7B,GAvBN,E,gBACE,YAAA,CAiBM,KAjBN,EAiBM;AAjBD,IAAA,KAAK,EAAC,yBAiBL;AAjBgC,IAAA,KAAK,EAAE,IAAA,CAAA,KAiBvC;AAjB+C,IAAA,MAAM,EAAE,IAAA,CAAA;AAiBvD,GAjBN,E,CACE,YAAA,CAEK,SAFL,EAEK;AAFK,IAAA,IAAI,EAAE,MAAA,CAAA,eAEX;AAF6B,IAAA,MAAM,2BAAmB,IAAA,CAAA,KAAA,GAAK,CAAxB,iBAAmC,IAAA,CAAA,KAAA,GAAK,CAAxC,eAAiD,IAAA,CAAA,MAAA,GAAM,CAAvD,iBAAkE,IAAA,CAAA,MAAA,GAAM,CAAxE;AAEnC,GAFL,E,IAAA,E;;AAAA,I,kBAAA,C,EAIA,YAAA,CAGE,UAHF,EAGE;AAFC,IAAA,MAAM,EAAE,KAAA,CAAA,WAAA,CAAW,CAAX,CAET;AADC,IAAA,MAAM,iBAAU,IAAA,CAAA,KAAA,GAAK,CAAf,iBAA0B,IAAA,CAAA,KAAA,GAAK,CAA/B,eAAwC,IAAA,CAAA,MAAA,GAAM,CAA9C,iBAAyD,IAAA,CAAA,MAAA,GAAM,CAA/D;AACP,GAHF,E,IAAA,E;;AAAA,I,oBAAA,C,EAIA,YAAA,CAGE,UAHF,EAGE;AAFC,IAAA,MAAM,EAAE,KAAA,CAAA,WAAA,CAAW,CAAX,CAET;AADC,IAAA,MAAM,iBAAU,IAAA,CAAA,KAAA,GAAK,CAAf,iBAA0B,IAAA,CAAA,KAAA,GAAK,CAA/B,eAAwC,IAAA,CAAA,MAAA,GAAM,CAA9C,iBAAyD,IAAA,CAAA,MAAA,GAAM,CAA/D;AACP,GAHF,E,IAAA,E;;AAAA,I,oBAAA,C,EAIA,YAAA,CAAuD,QAAvD,EAAuD;AAA9C,IAAA,IAAI,EAAE,KAAA,CAAA,WAAA,CAAW,CAAX,CAAwC;AAAxB,IAAA,EAAE,EAAC,IAAqB;AAAhB,IAAA,EAAE,EAAC,IAAa;AAAR,IAAA,CAAC,EAAC;AAAM,GAAvD,E,IAAA,E;;AAAA,I,QAAA,C,EACA,YAAA,CAAgE,QAAhE,EAAgE;AAAvD,IAAA,IAAI,EAAE,KAAA,CAAA,WAAA,CAAW,CAAX,CAAiD;AAAhC,IAAA,EAAE,EAAE,IAAA,CAAA,KAAA,GAAK,EAAuB;AAAhB,IAAA,EAAE,EAAC,IAAa;AAAR,IAAA,CAAC,EAAC;AAAM,GAAhE,E,IAAA,E;;AAAA,I,cAAA,C,EACA,YAAA,CAA0E,QAA1E,EAA0E;AAAjE,IAAA,IAAI,EAAE,KAAA,CAAA,WAAA,CAAW,CAAX,CAA2D;AAA1C,IAAA,EAAE,EAAE,IAAA,CAAA,KAAA,GAAK,EAAiC;AAAzB,IAAA,EAAE,EAAE,IAAA,CAAA,MAAA,GAAM,EAAe;AAAR,IAAA,CAAC,EAAC;AAAM,GAA1E,E,IAAA,E;;AAAA,I,oBAAA,C,EACA,YAAA,CAAiE,QAAjE,EAAiE;AAAxD,IAAA,IAAI,EAAE,KAAA,CAAA,WAAA,CAAW,CAAX,CAAkD;AAAlC,IAAA,EAAE,EAAC,IAA+B;AAAzB,IAAA,EAAE,EAAE,IAAA,CAAA,MAAA,GAAM,EAAe;AAAR,IAAA,CAAC,EAAC;AAAM,GAAjE,E,IAAA,E;;AAAA,I,cAAA,C,CAhBF,E;;AAAA,I,mBAAA,C,GAmBA,YAAA,CAEM,KAFN,EAAA,UAAA,EAEM,CADJ,WAAA,CAAa,IAAA,CAAA,MAAb,EAAa,SAAb,CACI,CAFN,C,CApBF,E;;AAAA,G","sourcesContent":["<template>\n  <div class=\"dv-border-box-2\" :ref=\"ref\">\n    <svg class=\"dv-border-svg-container\" :width=\"width\" :height=\"height\">\n      <polygon :fill=\"backgroundColor\" :points=\"`\n        7, 7 ${width - 7}, 7 ${width - 7}, ${height - 7} 7, ${height - 7}\n      `\" />\n\n      <polyline\n        :stroke=\"mergedColor[0]\"\n        :points=\"`2, 2 ${width - 2} ,2 ${width - 2}, ${height - 2} 2, ${height - 2} 2, 2`\"\n      />\n      <polyline\n        :stroke=\"mergedColor[1]\"\n        :points=\"`6, 6 ${width - 6}, 6 ${width - 6}, ${height - 6} 6, ${height - 6} 6, 6`\"\n      />\n      <circle :fill=\"mergedColor[0]\" cx=\"11\" cy=\"11\" r=\"1\" />\n      <circle :fill=\"mergedColor[0]\" :cx=\"width - 11\" cy=\"11\" r=\"1\" />\n      <circle :fill=\"mergedColor[0]\" :cx=\"width - 11\" :cy=\"height - 11\" r=\"1\" />\n      <circle :fill=\"mergedColor[0]\" cx=\"11\" :cy=\"height - 11\" r=\"1\" />\n    </svg>\n\n    <div class=\"border-box-content\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvBorderBox2',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    },\n    backgroundColor: {\n      type: String,\n      default: 'transparent'\n    }\n  },\n  data () {\n    return {\n      ref: 'border-box-2',\n\n      defaultColor: ['#fff', 'rgba(255, 255, 255, 0.6)'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"],"sourceRoot":""}]}