{"remainingRequest":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\babel-loader\\lib\\index.js!D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\@jiaminghi\\data-view\\lib\\components\\flylineChart\\src\\main.vue?vue&type=template&id=7d2541d4","dependencies":[{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\@jiaminghi\\data-view\\lib\\components\\flylineChart\\src\\main.vue","mtime":1629615077998},{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1628318231129},{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\babel-loader\\lib\\index.js","mtime":1628318231494},{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1628318231823},{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1628318231129},{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1628318231605}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\@jiaminghi\\data-view\\lib\\components\\flylineChart\\src\\main.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    class=\"dv-flyline-chart\"\n    ref=\"dv-flyline-chart\"\n    :style=\"`background-image: url(${mergedConfig ? mergedConfig.bgImgUrl : ''})`\"\n    @click=\"consoleClickPos\"\n  >\n    <svg v-if=\"mergedConfig\" :width=\"width\" :height=\"height\">\n      <defs>\n        <radialGradient\n          :id=\"gradientId\"\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\n        >\n          <stop\n            offset=\"0%\" stop-color=\"#fff\"\n            stop-opacity=\"1\"\n          />\n          <stop\n            offset=\"100%\" stop-color=\"#fff\"\n            stop-opacity=\"0\"\n          />\n        </radialGradient>\n\n        <radialGradient\n          :id=\"gradient2Id\"\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\n        >\n          <stop\n            offset=\"0%\" stop-color=\"#fff\"\n            stop-opacity=\"0\"\n          />\n          <stop\n            offset=\"100%\" stop-color=\"#fff\"\n            stop-opacity=\"1\"\n          />\n        </radialGradient>\n\n        <circle\n          v-if=\"paths[0]\"\n          :id=\"`circle${paths[0].toString()}`\"\n          :cx=\"paths[0][2][0]\"\n          :cy=\"paths[0][2][1]\"\n        >\n          <animate\n            attributeName=\"r\"\n            :values=\"`1;${mergedConfig.halo.radius}`\"\n            :dur=\"mergedConfig.halo.duration / 10 + 's'\"\n            repeatCount=\"indefinite\"\n          />\n          <animate\n            attributeName=\"opacity\"\n            values=\"1;0\"\n            :dur=\"mergedConfig.halo.duration / 10 + 's'\"\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n      </defs>\n\n      <image\n        v-if=\"paths[0]\"\n        :xlink:href=\"mergedConfig.centerPointImg.url\"\n        :width=\"mergedConfig.centerPointImg.width\"\n        :height=\"mergedConfig.centerPointImg.height\"\n        :x=\"paths[0][2][0] - mergedConfig.centerPointImg.width / 2\"\n        :y=\"paths[0][2][1] - mergedConfig.centerPointImg.height / 2\"\n      />\n\n      <mask :id=\"`maskhalo${paths[0].toString()}`\">\n        <use\n          v-if=\"paths[0]\"\n          :xlink:href=\"`#circle${paths[0].toString()}`\"\n          :fill=\"`url(#${gradient2Id})`\"\n        />\n      </mask>\n\n      <use\n        v-if=\"paths[0] && mergedConfig.halo.show\"\n        :xlink:href=\"`#circle${paths[0].toString()}`\"\n        :fill=\"mergedConfig.halo.color\"\n        :mask=\"`url(#maskhalo${paths[0].toString()})`\"\n      />\n\n      <g\n        v-for=\"(path, i) in paths\"\n        :key=\"i\"\n      >\n        <defs>\n          <path\n            :id=\"`path${path.toString()}`\"\n            :ref=\"`path${i}`\"\n            :d=\"`M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`\"\n            fill=\"transparent\"\n          />\n        </defs>\n\n        <use\n          :xlink:href=\"`#path${path.toString()}`\"\n          :stroke-width=\"mergedConfig.lineWidth\"\n          :stroke=\"mergedConfig.orbitColor\"\n        />\n\n        <use\n          v-if=\"lengths[i]\"\n          :xlink:href=\"`#path${path.toString()}`\"\n          :stroke-width=\"mergedConfig.lineWidth\"\n          :stroke=\"mergedConfig.flylineColor\"\n          :mask=\"`url(#mask${unique}${path.toString()})`\"\n        >\n          <animate\n            attributeName=\"stroke-dasharray\"\n            :from=\"`0, ${lengths[i]}`\"\n            :to=\"`${lengths[i]}, 0`\"\n            :dur=\"times[i] || 0\"\n            repeatCount=\"indefinite\"\n          />\n        </use>\n\n        <mask :id=\"`mask${unique}${path.toString()}`\">\n          <circle cx=\"0\" cy=\"0\" :r=\"mergedConfig.flylineRadius\" :fill=\"`url(#${gradientId})`\">\n            <animateMotion\n              :dur=\"times[i] || 0\"\n              :path=\"`M${path[0].toString()} Q${path[1].toString()} ${path[2].toString()}`\"\n              rotate=\"auto\"\n              repeatCount=\"indefinite\"\n            />\n          </circle>\n        </mask>\n\n        <image\n          :xlink:href=\"mergedConfig.pointsImg.url\"\n          :width=\"mergedConfig.pointsImg.width\"\n          :height=\"mergedConfig.pointsImg.height\"\n          :x=\"path[0][0] - mergedConfig.pointsImg.width / 2\"\n          :y=\"path[0][1] - mergedConfig.pointsImg.height / 2\"\n        />\n\n        <text\n          :style=\"`fontSize:${mergedConfig.text.fontSize}px;`\"\n          :fill=\"mergedConfig.text.color\"\n          :x=\"path[0][0] + mergedConfig.text.offset[0]\"\n          :y=\"path[0][1] + mergedConfig.text.offset[1]\"\n        >\n          {{ texts[i] }}\n        </text>\n\n      </g>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport { randomExtend, getPointDistance, uuid } from '../../../util/index'\n\nimport autoResize from '../../../mixin/autoResize'\n\nexport default {\n  name: 'DvFlylineChart',\n  mixins: [autoResize],\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    },\n    dev: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    const id = uuid()\n    return {\n      ref: 'dv-flyline-chart',\n      unique: Math.random(),\n      maskId: `flyline-mask-id-${id}`,\n      maskCircleId: `mask-circle-id-${id}`,\n      gradientId: `gradient-id-${id}`,\n      gradient2Id: `gradient2-id-${id}`,\n\n      defaultConfig: {\n        /**\n         * @description Flyline chart center point\n         * @type {Array<Number>}\n         * @default centerPoint = [0, 0]\n         */\n        centerPoint: [0, 0],\n        /**\n         * @description Flyline start points\n         * @type {Array<Array<Number>>}\n         * @default points = []\n         * @example points = [[10, 10], [100, 100]]\n         */\n        points: [],\n        /**\n         * @description Flyline width\n         * @type {Number}\n         * @default lineWidth = 1\n         */\n        lineWidth: 1,\n        /**\n         * @description Orbit color\n         * @type {String}\n         * @default orbitColor = 'rgba(103, 224, 227, .2)'\n         */\n        orbitColor: 'rgba(103, 224, 227, .2)',\n        /**\n         * @description Flyline color\n         * @type {String}\n         * @default orbitColor = '#ffde93'\n         */\n        flylineColor: '#ffde93',\n        /**\n         * @description K value\n         * @type {Number}\n         * @default k = -0.5\n         * @example k = -1 ~ 1\n         */\n        k: -0.5,\n        /**\n         * @description Flyline curvature\n         * @type {Number}\n         * @default curvature = 5\n         */\n        curvature: 5,\n        /**\n         * @description Flyline radius\n         * @type {Number}\n         * @default flylineRadius = 100\n         */\n        flylineRadius: 100,\n        /**\n         * @description Flyline animation duration\n         * @type {Array<Number>}\n         * @default duration = [20, 30]\n         */\n        duration: [20, 30],\n        /**\n         * @description Relative points position\n         * @type {Boolean}\n         * @default relative = true\n         */\n        relative: true,\n        /**\n         * @description Back ground image url\n         * @type {String}\n         * @default bgImgUrl = ''\n         * @example bgImgUrl = './img/bg.jpg'\n         */\n        bgImgUrl: '',\n        /**\n         * @description Text configuration\n         * @type {Object}\n         */\n        text: {\n          /**\n           * @description Text offset\n           * @type {Array<Number>}\n           * @default offset = [0, 15]\n           */\n          offset: [0, 15],\n          /**\n           * @description Text color\n           * @type {String}\n           * @default color = '#ffdb5c'\n           */\n          color: '#ffdb5c',\n          /**\n           * @description Text font size\n           * @type {Number}\n           * @default fontSize = 12\n           */\n          fontSize: 12\n        },\n        /**\n         * @description Halo configuration\n         * @type {Object}\n         */\n        halo: {\n          /**\n           * @description Weather to show halo\n           * @type {Boolean}\n           * @default show = true\n           * @example show = true | false\n           */\n          show: true,\n          /**\n           * @description Halo animation duration (10 = 1s)\n           * @type {Number}\n           * @default duration = 30\n           */\n          duration: 30,\n          /**\n           * @description Halo color\n           * @type {String}\n           * @default color = '#fb7293'\n           */\n          color: '#fb7293',\n          /**\n           * @description Halo max radius\n           * @type {Number}\n           * @default radius = 120\n           */\n          radius: 120\n        },\n        /**\n         * @description Center point img configuration\n         * @type {Object}\n         */\n        centerPointImg: {\n          /**\n           * @description Center point img width\n           * @type {Number}\n           * @default width = 40\n           */\n          width: 40,\n          /**\n           * @description Center point img height\n           * @type {Number}\n           * @default height = 40\n           */\n          height: 40,\n          /**\n           * @description Center point img url\n           * @type {String}\n           * @default url = ''\n           */\n          url: ''\n        },\n        /**\n         * @description Points img configuration\n         * @type {Object}\n         * @default radius = 120\n         */\n        pointsImg: {\n          /**\n           * @description Points img width\n           * @type {Number}\n           * @default width = 15\n           */\n          width: 15,\n          /**\n           * @description Points img height\n           * @type {Number}\n           * @default height = 15\n           */\n          height: 15,\n          /**\n           * @description Points img url\n           * @type {String}\n           * @default url = ''\n           */\n          url: ''\n        }\n      },\n\n      mergedConfig: null,\n\n      paths: [],\n      lengths: [],\n      times: [],\n      texts: []\n    }\n  },\n  watch: {\n    config () {\n      const { calcData } = this\n\n      calcData()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcData } = this\n\n      calcData()\n    },\n    onResize () {\n      const { calcData } = this\n\n      calcData()\n    },\n    async calcData () {\n      const { mergeConfig, createFlylinePaths, calcLineLengths } = this\n\n      mergeConfig()\n\n      createFlylinePaths()\n\n      await calcLineLengths()\n\n      const { calcTimes, calcTexts } = this\n\n      calcTimes()\n\n      calcTexts()\n    },\n    mergeConfig () {\n      let { config, defaultConfig } = this\n\n      const mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n\n      const { points } = mergedConfig\n\n      mergedConfig.points = points.map(item => {\n        if (item instanceof Array) {\n          return { position: item, text: '' }\n        }\n\n        return item\n      })\n\n      this.mergedConfig = mergedConfig\n    },\n    createFlylinePaths () {\n      const { getPath, mergedConfig, width, height } = this\n\n      let { centerPoint, points, relative } = mergedConfig\n\n      points = points.map(({ position }) => position)\n\n      if (relative) {\n        centerPoint = [width * centerPoint[0], height * centerPoint[1]]\n        points = points.map(([x, y]) => [width * x, height * y])\n      }\n\n      this.paths = points.map(point => getPath(centerPoint, point))\n    },\n    getPath (center, point) {\n      const { getControlPoint } = this\n\n      const controlPoint = getControlPoint(center, point)\n\n      return [point, controlPoint, center]\n    },\n    getControlPoint ([sx, sy], [ex, ey]) {\n      const { getKLinePointByx, mergedConfig } = this\n\n      const { curvature, k } = mergedConfig\n\n      const [mx, my] = [(sx + ex) / 2, (sy + ey) / 2]\n\n      const distance = getPointDistance([sx, sy], [ex, ey])\n\n      const targetLength = distance / curvature\n      const disDived = targetLength / 2\n\n      let [dx, dy] = [mx, my]\n\n      do {\n        dx += disDived\n        dy = getKLinePointByx(k, [mx, my], dx)[1]\n      } while (getPointDistance([mx, my], [dx, dy]) < targetLength)\n\n      return [dx, dy]\n    },\n    getKLinePointByx (k, [lx, ly], x) {\n      const y = ly - k * lx + k * x\n\n      return [x, y]\n    },\n    async calcLineLengths () {\n      const { $nextTick, paths, $refs } = this\n\n      await $nextTick()\n\n      this.lengths = paths.map((foo, i) => $refs[`path${i}`][0].getTotalLength())\n    },\n    calcTimes () {\n      const { duration, points } = this.mergedConfig\n\n      this.times = points.map(foo => randomExtend(...duration) / 10)\n    },\n    calcTexts () {\n      const { points } = this.mergedConfig\n\n      this.texts = points.map(({ text }) => text)\n    },\n    consoleClickPos ({ offsetX, offsetY }) {\n      const { width, height, dev } = this\n\n      if (!dev) return\n\n      const relativeX = (offsetX / width).toFixed(2)\n      const relativeY = (offsetY / height).toFixed(2)\n\n      console.warn(`dv-flyline-chart DEV: \\n Click Position is [${offsetX}, ${offsetY}] \\n Relative Position is [${relativeX}, ${relativeY}]`)\n    }\n  }\n}\n</script>"],"sourceRoot":""}]}