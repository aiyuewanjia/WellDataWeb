{"remainingRequest":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/thread-loader/dist/cjs.js!/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/babel-loader/lib/index.js!/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@jiaminghi/data-view/lib/components/capsuleChart/src/main.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@jiaminghi/data-view/lib/components/capsuleChart/src/main.vue","mtime":499162500000},{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvd2VuaGFvbGkvVnNjb2RlUHJvamVjdC9cdTRFOTVcdTVCQTRcdTdCQTFcdTc0MDZcdTdDRkJcdTdFREZcdTUyNERcdTdBRUYvd2VsbG1hbmFnZW1lbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zZXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbC5qcyI7CmltcG9ydCB7IGRlZXBNZXJnZSB9IGZyb20gJ0BqaWFtaW5naGkvY2hhcnRzL2xpYi91dGlsL2luZGV4JzsKaW1wb3J0IHsgZGVlcENsb25lIH0gZnJvbSAnQGppYW1pbmdoaS9jLXJlbmRlci9saWIvcGx1Z2luL3V0aWwnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0R2Q2Fwc3VsZUNoYXJ0JywKICBwcm9wczogewogICAgY29uZmlnOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGVmYXVsdENvbmZpZzogewogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBDYXBzdWxlIGNoYXJ0IGRhdGEKICAgICAgICAgKiBAdHlwZSB7QXJyYXk8T2JqZWN0Pn0KICAgICAgICAgKiBAZGVmYXVsdCBkYXRhID0gW10KICAgICAgICAgKiBAZXhhbXBsZSBkYXRhID0gW3sgbmFtZTogJ2ZvbzEnLCB2YWx1ZTogMTAwIH0sIHsgbmFtZTogJ2ZvbzInLCB2YWx1ZTogMTAwIH1dCiAgICAgICAgICovCiAgICAgICAgZGF0YTogW10sCgogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBDb2xvcnMgKGhleHxyZ2J8cmdiYXxjb2xvciBrZXl3b3JkcykKICAgICAgICAgKiBAdHlwZSB7QXJyYXk8U3RyaW5nPn0KICAgICAgICAgKiBAZGVmYXVsdCBjb2xvciA9IFsnIzM3YTJkYScsICcjMzJjNWU5JywgJyM2N2UwZTMnLCAnIzlmZTZiOCcsICcjZmZkYjVjJywgJyNmZjlmN2YnLCAnI2ZiNzI5MyddCiAgICAgICAgICogQGV4YW1wbGUgY29sb3IgPSBbJyMwMDAnLCAncmdiKDAsIDAsIDApJywgJ3JnYmEoMCwgMCwgMCwgMSknLCAncmVkJ10KICAgICAgICAgKi8KICAgICAgICBjb2xvcnM6IFsnIzM3YTJkYScsICcjMzJjNWU5JywgJyM2N2UwZTMnLCAnIzlmZTZiOCcsICcjZmZkYjVjJywgJyNmZjlmN2YnLCAnI2ZiNzI5MyddLAoKICAgICAgICAvKioKICAgICAgICAgKiBAZGVzY3JpcHRpb24gQ2hhcnQgdW5pdAogICAgICAgICAqIEB0eXBlIHtTdHJpbmd9CiAgICAgICAgICogQGRlZmF1bHQgdW5pdCA9ICcnCiAgICAgICAgICovCiAgICAgICAgdW5pdDogJycsCgogICAgICAgIC8qKgogICAgICAgICAqIEBkZXNjcmlwdGlvbiBTaG93IGl0ZW0gdmFsdWUKICAgICAgICAgKiBAdHlwZSB7Qm9vbGVhbn0KICAgICAgICAgKiBAZGVmYXVsdCBzaG93VmFsdWUgPSBmYWxzZQogICAgICAgICAqLwogICAgICAgIHNob3dWYWx1ZTogZmFsc2UKICAgICAgfSwKICAgICAgbWVyZ2VkQ29uZmlnOiBudWxsLAogICAgICBjYXBzdWxlTGVuZ3RoOiBbXSwKICAgICAgY2Fwc3VsZVZhbHVlOiBbXSwKICAgICAgbGFiZWxEYXRhOiBbXSwKICAgICAgbGFiZWxEYXRhTGVuZ3RoOiBbXQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBjb25maWc6IGZ1bmN0aW9uIGNvbmZpZygpIHsKICAgICAgdmFyIGNhbGNEYXRhID0gdGhpcy5jYWxjRGF0YTsKICAgICAgY2FsY0RhdGEoKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGNhbGNEYXRhOiBmdW5jdGlvbiBjYWxjRGF0YSgpIHsKICAgICAgdmFyIG1lcmdlQ29uZmlnID0gdGhpcy5tZXJnZUNvbmZpZywKICAgICAgICAgIGNhbGNDYXBzdWxlTGVuZ3RoQW5kTGFiZWxEYXRhID0gdGhpcy5jYWxjQ2Fwc3VsZUxlbmd0aEFuZExhYmVsRGF0YTsKICAgICAgbWVyZ2VDb25maWcoKTsKICAgICAgY2FsY0NhcHN1bGVMZW5ndGhBbmRMYWJlbERhdGEoKTsKICAgIH0sCiAgICBtZXJnZUNvbmZpZzogZnVuY3Rpb24gbWVyZ2VDb25maWcoKSB7CiAgICAgIHZhciBjb25maWcgPSB0aGlzLmNvbmZpZywKICAgICAgICAgIGRlZmF1bHRDb25maWcgPSB0aGlzLmRlZmF1bHRDb25maWc7CiAgICAgIHRoaXMubWVyZ2VkQ29uZmlnID0gZGVlcE1lcmdlKGRlZXBDbG9uZShkZWZhdWx0Q29uZmlnLCB0cnVlKSwgY29uZmlnIHx8IHt9KTsKICAgIH0sCiAgICBjYWxjQ2Fwc3VsZUxlbmd0aEFuZExhYmVsRGF0YTogZnVuY3Rpb24gY2FsY0NhcHN1bGVMZW5ndGhBbmRMYWJlbERhdGEoKSB7CiAgICAgIHZhciBkYXRhID0gdGhpcy5tZXJnZWRDb25maWcuZGF0YTsKICAgICAgaWYgKCFkYXRhLmxlbmd0aCkgcmV0dXJuOwogICAgICB2YXIgY2Fwc3VsZVZhbHVlID0gZGF0YS5tYXAoZnVuY3Rpb24gKF9yZWYpIHsKICAgICAgICB2YXIgdmFsdWUgPSBfcmVmLnZhbHVlOwogICAgICAgIHJldHVybiB2YWx1ZTsKICAgICAgfSk7CiAgICAgIHZhciBtYXhWYWx1ZSA9IE1hdGgubWF4LmFwcGx5KE1hdGgsIF90b0NvbnN1bWFibGVBcnJheShjYXBzdWxlVmFsdWUpKTsKICAgICAgdGhpcy5jYXBzdWxlVmFsdWUgPSBjYXBzdWxlVmFsdWU7CiAgICAgIHRoaXMuY2Fwc3VsZUxlbmd0aCA9IGNhcHN1bGVWYWx1ZS5tYXAoZnVuY3Rpb24gKHYpIHsKICAgICAgICByZXR1cm4gbWF4VmFsdWUgPyB2IC8gbWF4VmFsdWUgOiAwOwogICAgICB9KTsKICAgICAgdmFyIG9uZUZpZnRoID0gbWF4VmFsdWUgLyA1OwogICAgICB2YXIgbGFiZWxEYXRhID0gQXJyYXkuZnJvbShuZXcgU2V0KG5ldyBBcnJheSg2KS5maWxsKDApLm1hcChmdW5jdGlvbiAodiwgaSkgewogICAgICAgIHJldHVybiBNYXRoLmNlaWwoaSAqIG9uZUZpZnRoKTsKICAgICAgfSkpKTsKICAgICAgdGhpcy5sYWJlbERhdGEgPSBsYWJlbERhdGE7CiAgICAgIHRoaXMubGFiZWxEYXRhTGVuZ3RoID0gQXJyYXkuZnJvbShsYWJlbERhdGEpLm1hcChmdW5jdGlvbiAodikgewogICAgICAgIHJldHVybiBtYXhWYWx1ZSA/IHYgLyBtYXhWYWx1ZSA6IDA7CiAgICAgIH0pOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBjYWxjRGF0YSA9IHRoaXMuY2FsY0RhdGE7CiAgICBjYWxjRGF0YSgpOwogIH0KfTs="},{"version":3,"sources":["/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@jiaminghi/data-view/lib/components/capsuleChart/src/main.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"dv-capsule-chart\">\n    <template v-if=\"mergedConfig\">\n      <div class=\"label-column\">\n        <div v-for=\"item in mergedConfig.data\" :key=\"item.name\">{{ item.name }}</div>\n        <div>&nbsp;</div>\n      </div>\n\n      <div class=\"capsule-container\">\n        <div class=\"capsule-item\" v-for=\"(capsule, index) in capsuleLength\" :key=\"index\">\n          <div\n            class=\"capsule-item-column\"\n            :style=\"`width: ${capsule * 100}%; background-color: ${mergedConfig.colors[index % mergedConfig.colors.length]};`\"\n          >\n            <div\n              v-if=\"mergedConfig.showValue\"\n              class=\"capsule-item-value\"\n            >{{ capsuleValue[index] }}</div>\n          </div>\n        </div>\n\n        <div class=\"unit-label\">\n          <div\n            v-for=\"(label, index) in labelData\"\n            :key=\"label + index\"\n          >{{ label }}</div>\n        </div>\n      </div>\n\n      <div class=\"unit-text\" v-if=\"mergedConfig.unit\">{{ mergedConfig.unit }}</div>\n    </template>\n  </div>\n</template>\n\n<script>\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvCapsuleChart',\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    return {\n      defaultConfig: {\n        /**\n         * @description Capsule chart data\n         * @type {Array<Object>}\n         * @default data = []\n         * @example data = [{ name: 'foo1', value: 100 }, { name: 'foo2', value: 100 }]\n         */\n        data: [],\n        /**\n         * @description Colors (hex|rgb|rgba|color keywords)\n         * @type {Array<String>}\n         * @default color = ['#37a2da', '#32c5e9', '#67e0e3', '#9fe6b8', '#ffdb5c', '#ff9f7f', '#fb7293']\n         * @example color = ['#000', 'rgb(0, 0, 0)', 'rgba(0, 0, 0, 1)', 'red']\n         */\n        colors: [\n          '#37a2da',\n          '#32c5e9',\n          '#67e0e3',\n          '#9fe6b8',\n          '#ffdb5c',\n          '#ff9f7f',\n          '#fb7293'\n        ],\n        /**\n         * @description Chart unit\n         * @type {String}\n         * @default unit = ''\n         */\n        unit: '',\n        /**\n         * @description Show item value\n         * @type {Boolean}\n         * @default showValue = false\n         */\n        showValue: false\n      },\n\n      mergedConfig: null,\n\n      capsuleLength: [],\n      capsuleValue: [],\n      labelData: [],\n      labelDataLength: []\n    }\n  },\n  watch: {\n    config() {\n      const { calcData } = this\n\n      calcData()\n    }\n  },\n  methods: {\n    calcData() {\n      const { mergeConfig, calcCapsuleLengthAndLabelData } = this\n\n      mergeConfig()\n\n      calcCapsuleLengthAndLabelData()\n    },\n    mergeConfig() {\n      let { config, defaultConfig } = this\n\n      this.mergedConfig = deepMerge(\n        deepClone(defaultConfig, true),\n        config || {}\n      )\n    },\n    calcCapsuleLengthAndLabelData() {\n      const { data } = this.mergedConfig\n\n      if (!data.length) return\n\n      const capsuleValue = data.map(({ value }) => value)\n\n      const maxValue = Math.max(...capsuleValue)\n\n      this.capsuleValue = capsuleValue\n\n      this.capsuleLength = capsuleValue.map(v => (maxValue ? v / maxValue : 0))\n\n      const oneFifth = maxValue / 5\n\n      const labelData = Array.from(\n        new Set(new Array(6).fill(0).map((v, i) => Math.ceil(i * oneFifth)))\n      )\n\n      this.labelData = labelData\n\n      this.labelDataLength = Array.from(labelData).map(v =>\n        maxValue ? v / maxValue : 0\n      )\n    }\n  },\n  mounted() {\n    const { calcData } = this\n\n    calcData()\n  }\n}\n</script>"],"sourceRoot":""}]}