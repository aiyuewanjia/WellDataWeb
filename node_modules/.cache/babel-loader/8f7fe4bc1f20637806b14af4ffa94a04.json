{"remainingRequest":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\babel-loader\\lib\\index.js!D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\@jiaminghi\\data-view\\lib\\components\\scrollRankingBoard\\src\\main.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\@jiaminghi\\data-view\\lib\\components\\scrollRankingBoard\\src\\main.vue","mtime":1629615078000},{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1628318231129},{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\babel-loader\\lib\\index.js","mtime":1628318231494},{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1628318231129},{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1628318231605}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\@jiaminghi\\data-view\\lib\\components\\scrollRankingBoard\\src\\main.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"dv-scroll-ranking-board\" :ref=\"ref\">\n    <div\n      class=\"row-item\"\n      v-for=\"(item, i) in rows\"\n      :key=\"item.toString() + item.scroll\"\n      :style=\"`height: ${heights[i]}px;`\"\n    >\n      <div class=\"ranking-info\">\n        <div class=\"rank\">No.{{ item.ranking }}</div>\n        <div class=\"info-name\" v-html=\"item.name\" />\n        <div class=\"ranking-value\">{{ mergedConfig.valueFormatter ? mergedConfig.valueFormatter(item) : item.value + mergedConfig.unit }}</div>\n      </div>\n\n      <div class=\"ranking-column\">\n        <div\n          class=\"inside-column\"\n          :style=\"`width: ${item.percent}%;`\"\n        >\n          <div class=\"shine\" />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvScrollRankingBoard',\n  mixins: [autoResize],\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data () {\n    return {\n      ref: 'scroll-ranking-board',\n\n      defaultConfig: {\n        /**\n         * @description Board data\n         * @type {Array<Object>}\n         * @default data = []\n         */\n        data: [],\n        /**\n         * @description Row num\n         * @type {Number}\n         * @default rowNum = 5\n         */\n        rowNum: 5,\n        /**\n         * @description Scroll wait time\n         * @type {Number}\n         * @default waitTime = 2000\n         */\n        waitTime: 2000,\n        /**\n         * @description Carousel type\n         * @type {String}\n         * @default carousel = 'single'\n         * @example carousel = 'single' | 'page'\n         */\n        carousel: 'single',\n        /**\n         * @description Value unit\n         * @type {String}\n         * @default unit = ''\n         * @example unit = 'ton'\n         */\n        unit: '',\n        /**\n         * @description Auto sort by value\n         * @type {Boolean}\n         * @default sort = true\n         */\n        sort: true,\n        /**\n         * @description Value formatter\n         * @type {Function}\n         * @default valueFormatter = null\n         */\n        valueFormatter: null\n      },\n\n      mergedConfig: null,\n\n      rowsData: [],\n\n      rows: [],\n\n      heights: [],\n\n      animationIndex: 0,\n\n      animationHandler: '',\n\n      updater: 0\n    }\n  },\n  watch: {\n    config () {\n      const { stopAnimation, calcData } = this\n\n      stopAnimation()\n\n      calcData()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcData } = this\n\n      calcData()\n    },\n    onResize () {\n      const { mergedConfig, calcHeights } = this\n\n      if (!mergedConfig) return\n\n      calcHeights(true)\n    },\n    calcData () {\n      const { mergeConfig, calcRowsData } = this\n\n      mergeConfig()\n\n      calcRowsData()\n\n      const { calcHeights } = this\n\n      calcHeights()\n\n      const { animation } = this\n\n      animation(true)\n    },\n    mergeConfig () {\n      let { config, defaultConfig } = this\n\n      this.mergedConfig = deepMerge(deepClone(defaultConfig, true), config || {})\n    },\n    calcRowsData () {\n      let { data, rowNum, sort } = this.mergedConfig\n\n      sort && data.sort(({ value: a }, { value: b }) => {\n        if (a > b) return -1\n        if (a < b) return 1\n        if (a === b) return 0\n      })\n\n      const value = data.map(({ value }) => value)\n      \n      const min = Math.min(...value) || 0\n\n      // abs of min\n      const minAbs = Math.abs(min)\n\n      const max = Math.max(...value) || 0\n\n      // abs of max\n      const maxAbs = Math.abs(max)\n\n      const total = max + minAbs\n\n      data = data.map((row, i) => ({ ...row, ranking: i + 1, percent: (row.value + minAbs) / total * 100 }))\n\n      const rowLength = data.length\n\n      if (rowLength > rowNum && rowLength < 2 * rowNum) {\n        data = [...data, ...data]\n      }\n\n      data = data.map((d, i) => ({ ...d, scroll: i }))\n\n      this.rowsData = data\n      this.rows = data\n    },\n    calcHeights (onresize = false) {\n      const { height, mergedConfig } = this\n\n      const { rowNum, data } = mergedConfig\n\n      const avgHeight = height / rowNum\n\n      this.avgHeight = avgHeight\n\n      if (!onresize) this.heights = new Array(data.length).fill(avgHeight)\n    },\n    async animation (start = false) {\n      let { avgHeight, animationIndex, mergedConfig, rowsData, animation, updater } = this\n\n      const { waitTime, carousel, rowNum } = mergedConfig\n\n      const rowLength = rowsData.length\n\n      if (rowNum >= rowLength) return\n\n      if (start) {\n        await new Promise(resolve => setTimeout(resolve, waitTime))\n        if (updater !== this.updater) return\n      }\n\n      const animationNum = carousel === 'single' ? 1 : rowNum\n\n      let rows = rowsData.slice(animationIndex)\n      rows.push(...rowsData.slice(0, animationIndex))\n\n      this.rows = rows.slice(0, rowNum + 1)\n      this.heights = new Array(rowLength).fill(avgHeight)\n\n      await new Promise(resolve => setTimeout(resolve, 300))\n      if (updater !== this.updater) return\n\n      this.heights.splice(0, animationNum, ...new Array(animationNum).fill(0))\n\n      animationIndex += animationNum\n\n      const back = animationIndex - rowLength\n      if (back >= 0) animationIndex = back\n\n      this.animationIndex = animationIndex\n      this.animationHandler = setTimeout(animation, waitTime - 300)\n    },\n    stopAnimation () {\n      const { animationHandler, updater } = this\n\n      this.updater = (updater + 1) % 999999\n\n      if (!animationHandler) return\n\n      clearTimeout(animationHandler)\n    },\n  },\n  destroyed () {\n    const { stopAnimation } = this\n\n    stopAnimation()\n  }\n}\n</script>"],"sourceRoot":""}]}