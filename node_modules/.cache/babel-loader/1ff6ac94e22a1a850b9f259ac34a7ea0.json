{"remainingRequest":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\thread-loader\\dist\\cjs.js!D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\babel-loader\\lib\\index.js!D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\@jiaminghi\\data-view\\lib\\components\\capsuleChart\\src\\main.vue?vue&type=template&id=058edf2a","dependencies":[{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\@jiaminghi\\data-view\\lib\\components\\capsuleChart\\src\\main.vue","mtime":1629615077992},{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1628318231129},{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1628318231129},{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\babel-loader\\lib\\index.js","mtime":1628318231494},{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1628318231823},{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1628318231129},{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1628318231605}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCB7IHJlbmRlckxpc3QgYXMgX3JlbmRlckxpc3QsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgdG9EaXNwbGF5U3RyaW5nIGFzIF90b0Rpc3BsYXlTdHJpbmcsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUgfSBmcm9tICJ2dWUiOwp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogImR2LWNhcHN1bGUtY2hhcnQiCn07CnZhciBfaG9pc3RlZF8yID0gewogIGNsYXNzOiAibGFiZWwtY29sdW1uIgp9OwoKdmFyIF9ob2lzdGVkXzMgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJkaXYiLCBudWxsLCAiwqAiLCAtMSk7Cgp2YXIgX2hvaXN0ZWRfNCA9IHsKICBjbGFzczogImNhcHN1bGUtY29udGFpbmVyIgp9Owp2YXIgX2hvaXN0ZWRfNSA9IHsKICBrZXk6IDAsCiAgY2xhc3M6ICJjYXBzdWxlLWl0ZW0tdmFsdWUiCn07CnZhciBfaG9pc3RlZF82ID0gewogIGNsYXNzOiAidW5pdC1sYWJlbCIKfTsKdmFyIF9ob2lzdGVkXzcgPSB7CiAga2V5OiAwLAogIGNsYXNzOiAidW5pdC10ZXh0Igp9OwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMSwgWyRkYXRhLm1lcmdlZENvbmZpZyA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIHsKICAgIGtleTogMAogIH0sIFtfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzIsIFsoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoJGRhdGEubWVyZ2VkQ29uZmlnLmRhdGEsIGZ1bmN0aW9uIChpdGVtKSB7CiAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIsIHsKICAgICAga2V5OiBpdGVtLm5hbWUKICAgIH0sIF90b0Rpc3BsYXlTdHJpbmcoaXRlbS5uYW1lKSwgMSk7CiAgfSksIDEyOCkpLCBfaG9pc3RlZF8zXSksIF9jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNCwgWyhfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlQmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdCgkZGF0YS5jYXBzdWxlTGVuZ3RoLCBmdW5jdGlvbiAoY2Fwc3VsZSwgaW5kZXgpIHsKICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgewogICAgICBjbGFzczogImNhcHN1bGUtaXRlbSIsCiAgICAgIGtleTogaW5kZXgKICAgIH0sIFtfY3JlYXRlVk5vZGUoImRpdiIsIHsKICAgICAgY2xhc3M6ICJjYXBzdWxlLWl0ZW0tY29sdW1uIiwKICAgICAgc3R5bGU6ICJ3aWR0aDogIi5jb25jYXQoY2Fwc3VsZSAqIDEwMCwgIiU7IGJhY2tncm91bmQtY29sb3I6ICIpLmNvbmNhdCgkZGF0YS5tZXJnZWRDb25maWcuY29sb3JzW2luZGV4ICUgJGRhdGEubWVyZ2VkQ29uZmlnLmNvbG9ycy5sZW5ndGhdLCAiOyIpCiAgICB9LCBbJGRhdGEubWVyZ2VkQ29uZmlnLnNob3dWYWx1ZSA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgX2hvaXN0ZWRfNSwgX3RvRGlzcGxheVN0cmluZygkZGF0YS5jYXBzdWxlVmFsdWVbaW5kZXhdKSwgMSkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIiwgdHJ1ZSldLCA0KV0pOwogIH0pLCAxMjgpKSwgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF82LCBbKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KCRkYXRhLmxhYmVsRGF0YSwgZnVuY3Rpb24gKGxhYmVsLCBpbmRleCkgewogICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJkaXYiLCB7CiAgICAgIGtleTogbGFiZWwgKyBpbmRleAogICAgfSwgX3RvRGlzcGxheVN0cmluZyhsYWJlbCksIDEpOwogIH0pLCAxMjgpKV0pXSksICRkYXRhLm1lcmdlZENvbmZpZy51bml0ID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJkaXYiLCBfaG9pc3RlZF83LCBfdG9EaXNwbGF5U3RyaW5nKCRkYXRhLm1lcmdlZENvbmZpZy51bml0KSwgMSkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIiwgdHJ1ZSldLCA2NCkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIiwgdHJ1ZSldKTsKfQ=="},{"version":3,"sources":["D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\@jiaminghi\\data-view\\lib\\components\\capsuleChart\\src\\main.vue"],"names":[],"mappings":";;;;AACO,EAAA,KAAK,EAAC;;;AAEF,EAAA,KAAK,EAAC;;;8BAET,YAAA,CAAiB,KAAjB,EAAiB,IAAjB,EAAK,GAAL,EAAW,CAAA,CAAX,C;;;AAGG,EAAA,KAAK,EAAC;;;;AAQH,EAAA,KAAK,EAAC;;;AAKP,EAAA,KAAK,EAAC;;;;AAQR,EAAA,KAAK,EAAC;;;uBA5Bf,YAAA,CA8BM,KA9BN,EAAA,UAAA,EA8BM,CA7BY,KAAA,CAAA,Y,kBAAhB,YAAA,CA4BW,SA5BX,EA4BW;AAAA,IAAA,GAAA,EAAA;AAAA,GA5BX,EA4BW,CA3BT,YAAA,CAGM,KAHN,EAAA,UAAA,EAGM,E,kBAFJ,YAAA,CAA6E,SAA7E,EAA6E,IAA7E,EAA6E,WAAA,CAAzD,KAAA,CAAA,YAAA,CAAa,IAA4C,EAAxC,UAAzB,IAAyB,EAArB;yBAAhB,YAAA,CAA6E,KAA7E,EAA6E;AAArC,MAAA,GAAG,EAAE,IAAI,CAAC;AAA2B,KAA7E,E,iBAA2D,IAAI,CAAC,I,CAAhE,EAAoE,CAApE,C;GAA6E,CAA7E,E,GAAA,CAEI,GADJ,UACI,CAHN,CA2BS,EAtBT,YAAA,CAmBM,KAnBN,EAAA,UAAA,EAmBM,E,kBAlBJ,YAAA,CAUM,SAVN,EAUM,IAVN,EAUM,WAAA,CAV+C,KAAA,CAAA,aAU/C,EAV4D,UAAhC,OAAgC,EAAvB,KAAuB,EAAlB;yBAAhD,YAAA,CAUM,KAVN,EAUM;AAVD,MAAA,KAAK,EAAC,cAUL;AAV+D,MAAA,GAAG,EAAE;AAUpE,KAVN,E,CACE,YAAA,CAQM,KARN,EAQM;AAPJ,MAAA,KAAK,EAAC,qBAOF;AANH,MAAA,KAAK,mBAAY,OAAO,GAAA,GAAnB,kCAAiD,KAAA,CAAA,YAAA,CAAa,MAAb,CAAoB,KAAK,GAAG,KAAA,CAAA,YAAA,CAAa,MAAb,CAAoB,MAAhD,CAAjD;AAMF,KARN,E,CAKU,KAAA,CAAA,YAAA,CAAa,S,kBADrB,YAAA,CAGgC,KAHhC,EAAA,UAAA,EAGgC,gBAAA,CAA5B,KAAA,CAAA,YAAA,CAAa,KAAb,CAA4B,CAHhC,EAGsB,CAHtB,C,kCAJF,E,CAAA,C,CADF,C;GAUM,CAVN,E,GAAA,CAkBI,GANJ,YAAA,CAKM,KALN,EAAA,UAAA,EAKM,E,kBAJJ,YAAA,CAGkB,SAHlB,EAGkB,IAHlB,EAGkB,WAAA,CAFS,KAAA,CAAA,SAET,EAFkB,UAA1B,KAA0B,EAAnB,KAAmB,EAAd;yBADtB,YAAA,CAGkB,KAHlB,EAGkB;AADf,MAAA,GAAG,EAAE,KAAK,GAAG;AACE,KAHlB,E,iBAGI,K,CAHJ,EAGS,CAHT,C;GAGkB,CAHlB,E,GAAA,CAII,EALN,CAMI,CAnBN,CAsBS,EADoB,KAAA,CAAA,YAAA,CAAa,I,kBAA1C,YAAA,CAA6E,KAA7E,EAAA,UAAA,EAA6E,gBAAA,CAA1B,KAAA,CAAA,YAAA,CAAa,IAAa,CAA7E,EAAoE,CAApE,C,iCACS,CA5BX,E,EAAA,C,iCA6BI,CA9BN,C","sourcesContent":["<template>\n  <div class=\"dv-capsule-chart\">\n    <template v-if=\"mergedConfig\">\n      <div class=\"label-column\">\n        <div v-for=\"item in mergedConfig.data\" :key=\"item.name\">{{ item.name }}</div>\n        <div>&nbsp;</div>\n      </div>\n\n      <div class=\"capsule-container\">\n        <div class=\"capsule-item\" v-for=\"(capsule, index) in capsuleLength\" :key=\"index\">\n          <div\n            class=\"capsule-item-column\"\n            :style=\"`width: ${capsule * 100}%; background-color: ${mergedConfig.colors[index % mergedConfig.colors.length]};`\"\n          >\n            <div\n              v-if=\"mergedConfig.showValue\"\n              class=\"capsule-item-value\"\n            >{{ capsuleValue[index] }}</div>\n          </div>\n        </div>\n\n        <div class=\"unit-label\">\n          <div\n            v-for=\"(label, index) in labelData\"\n            :key=\"label + index\"\n          >{{ label }}</div>\n        </div>\n      </div>\n\n      <div class=\"unit-text\" v-if=\"mergedConfig.unit\">{{ mergedConfig.unit }}</div>\n    </template>\n  </div>\n</template>\n\n<script>\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvCapsuleChart',\n  props: {\n    config: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    return {\n      defaultConfig: {\n        /**\n         * @description Capsule chart data\n         * @type {Array<Object>}\n         * @default data = []\n         * @example data = [{ name: 'foo1', value: 100 }, { name: 'foo2', value: 100 }]\n         */\n        data: [],\n        /**\n         * @description Colors (hex|rgb|rgba|color keywords)\n         * @type {Array<String>}\n         * @default color = ['#37a2da', '#32c5e9', '#67e0e3', '#9fe6b8', '#ffdb5c', '#ff9f7f', '#fb7293']\n         * @example color = ['#000', 'rgb(0, 0, 0)', 'rgba(0, 0, 0, 1)', 'red']\n         */\n        colors: [\n          '#37a2da',\n          '#32c5e9',\n          '#67e0e3',\n          '#9fe6b8',\n          '#ffdb5c',\n          '#ff9f7f',\n          '#fb7293'\n        ],\n        /**\n         * @description Chart unit\n         * @type {String}\n         * @default unit = ''\n         */\n        unit: '',\n        /**\n         * @description Show item value\n         * @type {Boolean}\n         * @default showValue = false\n         */\n        showValue: false\n      },\n\n      mergedConfig: null,\n\n      capsuleLength: [],\n      capsuleValue: [],\n      labelData: [],\n      labelDataLength: []\n    }\n  },\n  watch: {\n    config() {\n      const { calcData } = this\n\n      calcData()\n    }\n  },\n  methods: {\n    calcData() {\n      const { mergeConfig, calcCapsuleLengthAndLabelData } = this\n\n      mergeConfig()\n\n      calcCapsuleLengthAndLabelData()\n    },\n    mergeConfig() {\n      let { config, defaultConfig } = this\n\n      this.mergedConfig = deepMerge(\n        deepClone(defaultConfig, true),\n        config || {}\n      )\n    },\n    calcCapsuleLengthAndLabelData() {\n      const { data } = this.mergedConfig\n\n      if (!data.length) return\n\n      const capsuleValue = data.map(({ value }) => value)\n\n      const maxValue = Math.max(...capsuleValue)\n\n      this.capsuleValue = capsuleValue\n\n      this.capsuleLength = capsuleValue.map(v => (maxValue ? v / maxValue : 0))\n\n      const oneFifth = maxValue / 5\n\n      const labelData = Array.from(\n        new Set(new Array(6).fill(0).map((v, i) => Math.ceil(i * oneFifth)))\n      )\n\n      this.labelData = labelData\n\n      this.labelDataLength = Array.from(labelData).map(v =>\n        maxValue ? v / maxValue : 0\n      )\n    }\n  },\n  mounted() {\n    const { calcData } = this\n\n    calcData()\n  }\n}\n</script>"],"sourceRoot":""}]}