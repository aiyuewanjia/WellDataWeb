{"remainingRequest":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/thread-loader/dist/cjs.js!/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/babel-loader/lib/index.js!/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@jiaminghi/data-view/lib/components/decoration12/src/main.vue?vue&type=template&id=1b5d7dd6","dependencies":[{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@jiaminghi/data-view/lib/components/decoration12/src/main.vue","mtime":499162500000},{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0IHsgcmVuZGVyTGlzdCBhcyBfcmVuZGVyTGlzdCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUsIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCByZW5kZXJTbG90IGFzIF9yZW5kZXJTbG90IH0gZnJvbSAidnVlIjsKCnZhciBfaG9pc3RlZF8xID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgic3RvcCIsIHsKICBvZmZzZXQ6ICIwJSIsCiAgInN0b3AtY29sb3IiOiAidHJhbnNwYXJlbnQiLAogICJzdG9wLW9wYWNpdHkiOiAiMSIKfSwgbnVsbCwgLTEpOwoKdmFyIF9ob2lzdGVkXzIgPSB7CiAga2V5OiAwCn07CnZhciBfaG9pc3RlZF8zID0gewogIGNsYXNzOiAiZGVjb3JhdGlvbi1jb250ZW50Igp9OwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgewogICAgY2xhc3M6ICJkdi1kZWNvcmF0aW9uLTEyIiwKICAgIHJlZjogJGRhdGEucmVmCiAgfSwgWyhfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygic3ZnIiwgewogICAgd2lkdGg6IF9jdHgud2lkdGgsCiAgICBoZWlnaHQ6IF9jdHguaGVpZ2h0CiAgfSwgW19jcmVhdGVWTm9kZSgiZGVmcyIsIG51bGwsIFtfY3JlYXRlVk5vZGUoImciLCB7CiAgICBpZDogJGRhdGEuZ0lkCiAgfSwgWyhfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlQmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdCgkZGF0YS5wYXRoRCwgZnVuY3Rpb24gKGQsIGkpIHsKICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygicGF0aCIsIHsKICAgICAgc3Ryb2tlOiAkZGF0YS5wYXRoQ29sb3JbaV0sCiAgICAgICJzdHJva2Utd2lkdGgiOiBfY3R4LndpZHRoIC8gMiwKICAgICAgZmlsbDogInRyYW5zcGFyZW50IiwKICAgICAga2V5OiBkLAogICAgICBkOiBkCiAgICB9LCBudWxsLCA4LCBbInN0cm9rZSIsICJzdHJva2Utd2lkdGgiLCAiZCJdKTsKICB9KSwgMTI4KSldLCA4LCBbImlkIl0pLCBfY3JlYXRlVk5vZGUoInJhZGlhbEdyYWRpZW50IiwgewogICAgaWQ6ICRkYXRhLmdyYWRpZW50SWQsCiAgICBjeDogIjUwJSIsCiAgICBjeTogIjUwJSIsCiAgICByOiAiNTAlIgogIH0sIFtfaG9pc3RlZF8xLCBfY3JlYXRlVk5vZGUoInN0b3AiLCB7CiAgICBvZmZzZXQ6ICIxMDAlIiwKICAgICJzdG9wLWNvbG9yIjogJG9wdGlvbnMuZmFkZSgkZGF0YS5tZXJnZWRDb2xvclsxXSB8fCAkZGF0YS5kZWZhdWx0Q29sb3JbMV0sIDMwKSwKICAgICJzdG9wLW9wYWNpdHkiOiAiMSIKICB9LCBudWxsLCA4LCBbInN0b3AtY29sb3IiXSldLCA4LCBbImlkIl0pXSksIChfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlQmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdCgkZGF0YS5jaXJjbGVSLCBmdW5jdGlvbiAocikgewogICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJjaXJjbGUiLCB7CiAgICAgIGtleTogciwKICAgICAgcjogciwKICAgICAgY3g6ICRvcHRpb25zLngsCiAgICAgIGN5OiAkb3B0aW9ucy55LAogICAgICBzdHJva2U6ICRkYXRhLm1lcmdlZENvbG9yWzFdLAogICAgICAic3Ryb2tlLXdpZHRoIjogMC41LAogICAgICBmaWxsOiAidHJhbnNwYXJlbnQiCiAgICB9LCBudWxsLCA4LCBbInIiLCAiY3giLCAiY3kiLCAic3Ryb2tlIiwgInN0cm9rZS13aWR0aCJdKTsKICB9KSwgMTI4KSksIF9jcmVhdGVWTm9kZSgiY2lyY2xlIiwgewogICAgcjogIjEiLAogICAgY3g6ICRvcHRpb25zLngsCiAgICBjeTogJG9wdGlvbnMueSwKICAgIHN0cm9rZTogInRyYW5zcGFyZW50IiwKICAgIGZpbGw6ICJ1cmwoIyIuY29uY2F0KCRkYXRhLmdyYWRpZW50SWQsICIpIikKICB9LCBbX2NyZWF0ZVZOb2RlKCJhbmltYXRlIiwgewogICAgYXR0cmlidXRlTmFtZTogInIiLAogICAgdmFsdWVzOiAiMTsiLmNvbmNhdChfY3R4LndpZHRoIC8gMiksCiAgICBkdXI6ICIiLmNvbmNhdCgkcHJvcHMuaGFsb0R1ciwgInMiKSwKICAgIHJlcGVhdENvdW50OiAiaW5kZWZpbml0ZSIKICB9LCBudWxsLCA4LCBbInZhbHVlcyIsICJkdXIiXSksIF9jcmVhdGVWTm9kZSgiYW5pbWF0ZSIsIHsKICAgIGF0dHJpYnV0ZU5hbWU6ICJvcGFjaXR5IiwKICAgIHZhbHVlczogIjE7MCIsCiAgICBkdXI6ICIiLmNvbmNhdCgkcHJvcHMuaGFsb0R1ciwgInMiKSwKICAgIHJlcGVhdENvdW50OiAiaW5kZWZpbml0ZSIKICB9LCBudWxsLCA4LCBbImR1ciJdKV0sIDgsIFsiY3giLCAiY3kiLCAiZmlsbCJdKSwgX2NyZWF0ZVZOb2RlKCJjaXJjbGUiLCB7CiAgICByOiAiMiIsCiAgICBjeDogJG9wdGlvbnMueCwKICAgIGN5OiAkb3B0aW9ucy55LAogICAgZmlsbDogJGRhdGEubWVyZ2VkQ29sb3JbMV0KICB9LCBudWxsLCA4LCBbImN4IiwgImN5IiwgImZpbGwiXSksICRkYXRhLnNob3dTcGxpdExpbmUgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImciLCBfaG9pc3RlZF8yLCBbKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KCRkYXRhLnNwbGl0TGluZVBvaW50cywgZnVuY3Rpb24gKHApIHsKICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygicG9seWxpbmUiLCB7CiAgICAgIGtleTogcCwKICAgICAgcG9pbnRzOiBwLAogICAgICBzdHJva2U6ICRkYXRhLm1lcmdlZENvbG9yWzFdLAogICAgICAic3Ryb2tlLXdpZHRoIjogMC41LAogICAgICBvcGFjaXR5OiAiMC41IgogICAgfSwgbnVsbCwgOCwgWyJwb2ludHMiLCAic3Ryb2tlIiwgInN0cm9rZS13aWR0aCJdKTsKICB9KSwgMTI4KSldKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCIiLCB0cnVlKSwgKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KCRkYXRhLmFyY0QsIGZ1bmN0aW9uIChkKSB7CiAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soInBhdGgiLCB7CiAgICAgIGtleTogZCwKICAgICAgZDogZCwKICAgICAgc3Ryb2tlOiAkZGF0YS5tZXJnZWRDb2xvclsxXSwKICAgICAgInN0cm9rZS13aWR0aCI6ICIyIiwKICAgICAgZmlsbDogInRyYW5zcGFyZW50IgogICAgfSwgbnVsbCwgOCwgWyJkIiwgInN0cm9rZSJdKTsKICB9KSwgMTI4KSksIF9jcmVhdGVWTm9kZSgidXNlIiwgewogICAgInhsaW5rOmhyZWYiOiAiIyIuY29uY2F0KCRkYXRhLmdJZCkKICB9LCBbX2NyZWF0ZVZOb2RlKCJhbmltYXRlVHJhbnNmb3JtIiwgewogICAgYXR0cmlidXRlTmFtZTogInRyYW5zZm9ybSIsCiAgICB0eXBlOiAicm90YXRlIiwKICAgIHZhbHVlczogIjAsICIuY29uY2F0KCRvcHRpb25zLngsICIgIikuY29uY2F0KCRvcHRpb25zLnksICI7MzYwLCAiKS5jb25jYXQoJG9wdGlvbnMueCwgIiAiKS5jb25jYXQoJG9wdGlvbnMueSksCiAgICBkdXI6ICIiLmNvbmNhdCgkcHJvcHMuc2NhbkR1ciwgInMiKSwKICAgIHJlcGVhdENvdW50OiAiaW5kZWZpbml0ZSIKICB9LCBudWxsLCA4LCBbInZhbHVlcyIsICJkdXIiXSldLCA4LCBbInhsaW5rOmhyZWYiXSldLCA4LCBbIndpZHRoIiwgImhlaWdodCJdKSksIF9jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMywgW19yZW5kZXJTbG90KF9jdHguJHNsb3RzLCAiZGVmYXVsdCIpXSldLCA1MTIpOwp9"},{"version":3,"sources":["/Users/wenhaoli/VscodeProject/井室管理系统前端/wellmanagement/node_modules/@jiaminghi/data-view/lib/components/decoration12/src/main.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"dv-decoration-12\" :ref=\"ref\">\n    <svg :width=\"width\" :height=\"height\">\n      <defs>\n        <g :id=\"gId\">\n          <path\n            :stroke=\"pathColor[i]\"\n            :stroke-width=\"width / 2\"\n            fill=\"transparent\"\n            v-for=\"(d, i) in pathD\"\n            :key=\"d\"\n            :d=\"d\"\n          />\n        </g>\n\n        <radialGradient\n          :id=\"gradientId\"\n          cx=\"50%\" cy=\"50%\" r=\"50%\"\n        >\n          <stop offset=\"0%\" stop-color=\"transparent\" stop-opacity=\"1\" />\n          <stop offset=\"100%\" :stop-color=\"fade(mergedColor[1] || defaultColor[1], 30)\" stop-opacity=\"1\" />\n        </radialGradient>\n      </defs>\n\n      <circle\n        v-for=\"r in circleR\"\n        :key=\"r\"\n        :r=\"r\"\n        :cx=\"x\"\n        :cy=\"y\"\n        :stroke=\"mergedColor[1]\"\n        :stroke-width=\"0.5\"\n        fill=\"transparent\"\n      />\n\n      <circle\n        r=\"1\"\n        :cx=\"x\"\n        :cy=\"y\"\n        stroke=\"transparent\"\n        :fill=\"`url(#${gradientId})`\"\n      >\n        <animate\n          attributeName=\"r\"\n          :values=\"`1;${width / 2}`\"\n          :dur=\"`${haloDur}s`\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"opacity\"\n          values=\"1;0\"\n          :dur=\"`${haloDur}s`\"\n          repeatCount=\"indefinite\"\n        />\n      </circle>\n\n      <circle\n        r=\"2\"\n        :cx=\"x\"\n        :cy=\"y\"\n        :fill=\"mergedColor[1]\"\n      />\n\n      <g v-if=\"showSplitLine\">\n        <polyline\n          v-for=\"p in splitLinePoints\"\n          :key=\"p\"\n          :points=\"p\"\n          :stroke=\"mergedColor[1]\"\n          :stroke-width=\"0.5\"\n          opacity=\"0.5\"\n        />\n      </g>\n\n      <path\n        v-for=\"d in arcD\"\n        :key=\"d\"\n        :d=\"d\"\n        :stroke=\"mergedColor[1]\"\n        stroke-width=\"2\"\n        fill=\"transparent\"\n      />\n\n      <use :xlink:href=\"`#${gId}`\">\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          :values=\"`0, ${x} ${y};360, ${x} ${y}`\"\n          :dur=\"`${scanDur}s`\"\n          repeatCount=\"indefinite\"\n        />\n      </use>\n    </svg>\n\n    <div class=\"decoration-content\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\nimport { uuid } from '../../../util/index'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone, getCircleRadianPoint } from '@jiaminghi/c-render/lib/plugin/util'\n\nimport { fade } from '@jiaminghi/color'\n\nexport default {\n  name: 'DvDecoration12',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    },\n    /**\n     * @description Scan animation dur\n     */\n    scanDur: {\n      type: Number,\n      default: 3\n    },\n    /**\n     * @description Halo animation dur\n     */\n    haloDur: {\n      type: Number,\n      default: 2\n    }\n  },\n  data () {\n    const id = uuid()\n    return {\n      ref: 'decoration-12',\n      gId: `decoration-12-g-${id}`,\n      gradientId: `decoration-12-gradient-${id}`,\n\n      defaultColor: ['#2783ce', '#2cf7fe'],\n\n      mergedColor: [],\n\n      pathD: [],\n\n      pathColor: [],\n\n      circleR: [],\n\n      splitLinePoints: [],\n\n      arcD: [],\n\n      segment: 30,\n\n      sectorAngle: Math.PI / 3,\n\n      ringNum: 3,\n\n      ringWidth: 1,\n\n      showSplitLine: true\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  computed: {\n    x () {\n      const { width } = this\n\n      return width / 2\n    },\n    y () {\n      const { height } = this\n\n      return height / 2\n    }\n  },\n  methods: {\n    init () {\n      const { mergeColor, calcPathD, calcPathColor, calcCircleR, calcSplitLinePoints, calcArcD } = this\n\n      mergeColor()\n\n      calcPathD()\n\n      calcPathColor()\n\n      calcCircleR()\n\n      calcSplitLinePoints()\n\n      calcArcD()\n    },\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    },\n    calcPathD () {\n      const { x, y, width, segment, sectorAngle } = this\n\n      const startAngle = -Math.PI / 2\n      const angleGap = sectorAngle / segment\n      const r = width / 4\n      let lastEndPoints = getCircleRadianPoint(x, y, r, startAngle)\n\n      this.pathD = new Array(segment)\n        .fill('')\n        .map((_, i) => {\n          const endPoints = getCircleRadianPoint(x, y, r, startAngle - (i + 1) * angleGap).map(_ => _.toFixed(5))\n          const d = `M${lastEndPoints.join(',')} A${r}, ${r} 0 0 0 ${endPoints.join(',')}`\n          lastEndPoints = endPoints\n\n          return d\n        })\n    },\n    calcPathColor () {\n      const { mergedColor: [color], segment } = this\n\n      const colorGap = 100 / (segment - 1)\n\n      this.pathColor = new Array(segment)\n        .fill(color)\n        .map((_, i) => fade(color, 100 - i * colorGap))\n    },\n    calcCircleR () {\n      const { segment, ringNum, width, ringWidth } = this\n\n      const radiusGap = (width / 2 - ringWidth / 2) / ringNum\n\n      this.circleR = new Array(ringNum)\n        .fill(0)\n        .map((_, i) => radiusGap * (i + 1))\n    },\n    calcSplitLinePoints () {\n      const { x, y, width } = this\n\n      const angleGap = Math.PI / 6\n      const r = width / 2\n\n      this.splitLinePoints = new Array(6)\n        .fill('')\n        .map((_, i) => {\n          const startAngle = angleGap * (i + 1)\n          const endAngle = startAngle + Math.PI\n          const startPoint = getCircleRadianPoint(x, y, r, startAngle)\n          const endPoint = getCircleRadianPoint(x, y, r, endAngle)\n\n          return `${startPoint.join(',')} ${endPoint.join(',')}`\n        })\n    },\n    calcArcD () {\n      const { x, y, width } = this\n\n      const angleGap = Math.PI / 6\n      const r = width / 2 - 1\n\n      this.arcD = new Array(4)\n        .fill('')\n        .map((_, i) => {\n          const startAngle = angleGap * (3 * i + 1)\n          const endAngle = startAngle + angleGap\n          const startPoint = getCircleRadianPoint(x, y, r, startAngle)\n          const endPoint = getCircleRadianPoint(x, y, r, endAngle)\n\n          return `M${startPoint.join(',')} A${x}, ${y} 0 0 1 ${endPoint.join(',')}`\n        })\n    },\n    afterAutoResizeMixinInit () {\n      const { init } = this\n\n      init()\n    },\n    fade\n  }\n}\n</script>"],"sourceRoot":""}]}