{"remainingRequest":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\thread-loader\\dist\\cjs.js!D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\babel-loader\\lib\\index.js!D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\vue-loader-v16\\dist\\templateLoader.js??ref--6!D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration6\\src\\main.vue?vue&type=template&id=25a6c0ca","dependencies":[{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration6\\src\\main.vue","mtime":1629616323680},{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1628318231129},{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1628318231129},{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\babel-loader\\lib\\index.js","mtime":1628318231494},{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1628318231823},{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1628318231129},{"path":"D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1628318231605}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0IHsgcmVuZGVyTGlzdCBhcyBfcmVuZGVyTGlzdCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUgfSBmcm9tICJ2dWUiOwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgewogICAgY2xhc3M6ICJkdi1kZWNvcmF0aW9uLTYiLAogICAgcmVmOiAkZGF0YS5yZWYKICB9LCBbKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJzdmciLCB7CiAgICB3aWR0aDogIiIuY29uY2F0KCRkYXRhLnN2Z1dIWzBdLCAicHgiKSwKICAgIGhlaWdodDogIiIuY29uY2F0KCRkYXRhLnN2Z1dIWzFdLCAicHgiKSwKICAgIHN0eWxlOiAidHJhbnNmb3JtOnNjYWxlKCIuY29uY2F0KCRkYXRhLnN2Z1NjYWxlWzBdLCAiLCIpLmNvbmNhdCgkZGF0YS5zdmdTY2FsZVsxXSwgIik7IikKICB9LCBbKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KCRkYXRhLnBvaW50cywgZnVuY3Rpb24gKHBvaW50LCBpKSB7CiAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soInJlY3QiLCB7CiAgICAgIGtleTogaSwKICAgICAgZmlsbDogJGRhdGEubWVyZ2VkQ29sb3JbTWF0aC5yYW5kb20oKSA+IDAuNSA/IDAgOiAxXSwKICAgICAgeDogcG9pbnRbMF0gLSAkZGF0YS5oYWxmUmVjdFdpZHRoLAogICAgICB5OiBwb2ludFsxXSAtICRkYXRhLmhlaWdodHNbaV0gLyAyLAogICAgICB3aWR0aDogJGRhdGEucmVjdFdpZHRoLAogICAgICBoZWlnaHQ6ICRkYXRhLmhlaWdodHNbaV0KICAgIH0sIFtfY3JlYXRlVk5vZGUoImFuaW1hdGUiLCB7CiAgICAgIGF0dHJpYnV0ZU5hbWU6ICJ5IiwKICAgICAgdmFsdWVzOiAiIi5jb25jYXQocG9pbnRbMV0gLSAkZGF0YS5taW5IZWlnaHRzW2ldIC8gMiwgIjsiKS5jb25jYXQocG9pbnRbMV0gLSAkZGF0YS5oZWlnaHRzW2ldIC8gMiwgIjsiKS5jb25jYXQocG9pbnRbMV0gLSAkZGF0YS5taW5IZWlnaHRzW2ldIC8gMiksCiAgICAgIGR1cjogIiIuY29uY2F0KCRkYXRhLnJhbmRvbXNbaV0sICJzIiksCiAgICAgIGtleVRpbWVzOiAiMDswLjU7MSIsCiAgICAgIGNhbGNNb2RlOiAic3BsaW5lIiwKICAgICAga2V5U3BsaW5lczogIjAuNDIsMCwwLjU4LDE7MC40MiwwLDAuNTgsMSIsCiAgICAgIGJlZ2luOiAiMHMiLAogICAgICByZXBlYXRDb3VudDogImluZGVmaW5pdGUiCiAgICB9LCBudWxsLCA4LCBbInZhbHVlcyIsICJkdXIiXSksIF9jcmVhdGVWTm9kZSgiYW5pbWF0ZSIsIHsKICAgICAgYXR0cmlidXRlTmFtZTogImhlaWdodCIsCiAgICAgIHZhbHVlczogIiIuY29uY2F0KCRkYXRhLm1pbkhlaWdodHNbaV0sICI7IikuY29uY2F0KCRkYXRhLmhlaWdodHNbaV0sICI7IikuY29uY2F0KCRkYXRhLm1pbkhlaWdodHNbaV0pLAogICAgICBkdXI6ICIiLmNvbmNhdCgkZGF0YS5yYW5kb21zW2ldLCAicyIpLAogICAgICBrZXlUaW1lczogIjA7MC41OzEiLAogICAgICBjYWxjTW9kZTogInNwbGluZSIsCiAgICAgIGtleVNwbGluZXM6ICIwLjQyLDAsMC41OCwxOzAuNDIsMCwwLjU4LDEiLAogICAgICBiZWdpbjogIjBzIiwKICAgICAgcmVwZWF0Q291bnQ6ICJpbmRlZmluaXRlIgogICAgfSwgbnVsbCwgOCwgWyJ2YWx1ZXMiLCAiZHVyIl0pXSwgOCwgWyJmaWxsIiwgIngiLCAieSIsICJ3aWR0aCIsICJoZWlnaHQiXSk7CiAgfSksIDEyOCkpXSwgMTIsIFsid2lkdGgiLCAiaGVpZ2h0Il0pKV0sIDUxMik7Cn0="},{"version":3,"sources":["D:\\BaiduNetdiskWorkspace\\程序文件\\井室管理系统前端\\wellmanagement\\node_modules\\@jiaminghi\\data-view\\lib\\components\\decoration6\\src\\main.vue"],"names":[],"mappings":";;;uBACE,YAAA,CAoCM,KApCN,EAoCM;AApCD,IAAA,KAAK,EAAC,iBAoCL;AApCwB,IAAA,GAAG,EAAE,KAAA,CAAA;AAoC7B,GApCN,E,gBACE,YAAA,CAkCM,KAlCN,EAkCM;AAlCA,IAAA,KAAK,YAAK,KAAA,CAAA,KAAA,CAAK,CAAL,CAAL,OAkCL;AAlCyB,IAAA,MAAM,YAAK,KAAA,CAAA,KAAA,CAAK,CAAL,CAAL,OAkC/B;AAlCmD,IAAA,KAAK,4BAAqB,KAAA,CAAA,QAAA,CAAQ,CAAR,CAArB,cAAoC,KAAA,CAAA,QAAA,CAAQ,CAAR,CAApC;AAkCxD,GAlCN,E,oBACE,YAAA,CAgCW,SAhCX,EAgCW,IAhCX,EAgCW,WAAA,CA/BY,KAAA,CAAA,MA+BZ,EA/BkB,UAAnB,KAAmB,EAAZ,CAAY,EAAX;yBAEhB,YAAA,CA4BO,MA5BP,EA4BO;WA9B4B,CA8B5B;AA1BJ,MAAA,IAAI,EAAE,KAAA,CAAA,WAAA,CAAY,IAAI,CAAC,MAAL,KAAW,GAAX,GAAW,CAAX,GAAW,CAAvB,CA0BF;AAzBJ,MAAA,CAAC,EAAE,KAAK,CAAA,CAAA,CAAL,GAAW,KAAA,CAAA,aAyBV;AAxBJ,MAAA,CAAC,EAAE,KAAK,CAAA,CAAA,CAAL,GAAW,KAAA,CAAA,OAAA,CAAQ,CAAR,IAAS,CAwBnB;AAvBJ,MAAA,KAAK,EAAE,KAAA,CAAA,SAuBH;AAtBJ,MAAA,MAAM,EAAE,KAAA,CAAA,OAAA,CAAQ,CAAR;AAsBJ,KA5BP,E,CAQE,YAAA,CASE,SATF,EASE;AARA,MAAA,aAAa,EAAC,GAQd;AAPC,MAAA,MAAM,YAAK,KAAK,CAAA,CAAA,CAAL,GAAW,KAAA,CAAA,UAAA,CAAW,CAAX,IAAY,CAA5B,cAAqC,KAAK,CAAA,CAAA,CAAL,GAAW,KAAA,CAAA,OAAA,CAAQ,CAAR,IAAS,CAAzD,cAAkE,KAAK,CAAA,CAAA,CAAL,GAAW,KAAA,CAAA,UAAA,CAAW,CAAX,IAAY,CAAzF,CAOP;AANC,MAAA,GAAG,YAAK,KAAA,CAAA,OAAA,CAAQ,CAAR,CAAL,MAMJ;AALA,MAAA,QAAQ,EAAC,SAKT;AAJA,MAAA,QAAQ,EAAC,QAIT;AAHA,MAAA,UAAU,EAAC,6BAGX;AAFA,MAAA,KAAK,EAAC,IAEN;AADA,MAAA,WAAW,EAAC;AACZ,KATF,E,IAAA,E,CAAA,E,iBAAA,C,EAUA,YAAA,CASE,SATF,EASE;AARA,MAAA,aAAa,EAAC,QAQd;AAPC,MAAA,MAAM,YAAK,KAAA,CAAA,UAAA,CAAW,CAAX,CAAL,cAAsB,KAAA,CAAA,OAAA,CAAQ,CAAR,CAAtB,cAAoC,KAAA,CAAA,UAAA,CAAW,CAAX,CAApC,CAOP;AANC,MAAA,GAAG,YAAK,KAAA,CAAA,OAAA,CAAQ,CAAR,CAAL,MAMJ;AALA,MAAA,QAAQ,EAAC,SAKT;AAJA,MAAA,QAAQ,EAAC,QAIT;AAHA,MAAA,UAAU,EAAC,6BAGX;AAFA,MAAA,KAAK,EAAC,IAEN;AADA,MAAA,WAAW,EAAC;AACZ,KATF,E,IAAA,E,CAAA,E,iBAAA,C,CAlBF,E,CAAA,E,qCAAA,C;GA6BS,CAhCX,E,GAAA,C,EADF,E,EAAA,E,mBAAA,C,EADF,E,GAAA,C","sourcesContent":["<template>\n  <div class=\"dv-decoration-6\" :ref=\"ref\">\n    <svg :width=\"`${svgWH[0]}px`\" :height=\"`${svgWH[1]}px`\" :style=\"`transform:scale(${svgScale[0]},${svgScale[1]});`\">\n      <template\n        v-for=\"(point, i) in points\" :key=\"i\"\n      >\n        <rect\n\n          :fill=\"mergedColor[Math.random() > 0.5 ? 0 : 1]\"\n          :x=\"point[0] - halfRectWidth\"\n          :y=\"point[1] - heights[i] / 2\"\n          :width=\"rectWidth\"\n          :height=\"heights[i]\"\n        >\n          <animate\n            attributeName=\"y\"\n            :values=\"`${point[1] - minHeights[i] / 2};${point[1] - heights[i] / 2};${point[1] - minHeights[i] / 2}`\"\n            :dur=\"`${randoms[i]}s`\"\n            keyTimes=\"0;0.5;1\"\n            calcMode=\"spline\"\n            keySplines=\"0.42,0,0.58,1;0.42,0,0.58,1\"\n            begin=\"0s\"\n            repeatCount=\"indefinite\"\n          />\n          <animate\n            attributeName=\"height\"\n            :values=\"`${minHeights[i]};${heights[i]};${minHeights[i]}`\"\n            :dur=\"`${randoms[i]}s`\"\n            keyTimes=\"0;0.5;1\"\n            calcMode=\"spline\"\n            keySplines=\"0.42,0,0.58,1;0.42,0,0.58,1\"\n            begin=\"0s\"\n            repeatCount=\"indefinite\"\n          />\n        </rect>\n      </template>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { randomExtend } from '../../../util'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvDecoration6',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    }\n  },\n  data () {\n    const rectWidth = 7\n\n    return {\n      ref: 'decoration-6',\n\n      svgWH: [300, 35],\n\n      svgScale: [1, 1],\n\n      rowNum: 1,\n      rowPoints: 40,\n\n      rectWidth,\n      halfRectWidth: rectWidth / 2,\n\n      points: [],\n      heights: [],\n      minHeights: [],\n      randoms: [],\n\n      defaultColor: ['#7acaec', '#7acaec'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    afterAutoResizeMixinInit () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    calcSVGData () {\n      const { calcPointsPosition, calcScale } = this\n\n      calcPointsPosition()\n\n      calcScale()\n    },\n    calcPointsPosition () {\n      const { svgWH, rowNum, rowPoints } = this\n\n      const [w, h] = svgWH\n\n      const horizontalGap = w / (rowPoints + 1)\n      const verticalGap = h / (rowNum + 1)\n\n      let points = new Array(rowNum).fill(0).map((foo, i) =>\n        new Array(rowPoints).fill(0).map((foo, j) => [\n          horizontalGap * (j + 1), verticalGap * (i + 1)\n        ]))\n\n      this.points = points.reduce((all, item) => [...all, ...item], [])\n      const heights = this.heights = new Array(rowNum * rowPoints)\n        .fill(0).map(foo =>\n          Math.random() > 0.8 ? randomExtend(0.7 * h, h) : randomExtend(0.2 * h, 0.5 * h))\n\n      this.minHeights = new Array(rowNum * rowPoints)\n        .fill(0).map((foo, i) => heights[i] * Math.random())\n\n      this.randoms = new Array(rowNum * rowPoints)\n        .fill(0).map(foo => Math.random() + 1.5)\n    },\n    calcScale () {\n      const { width, height, svgWH } = this\n\n      const [w, h] = svgWH\n\n      this.svgScale = [width / w, height / h]\n    },\n    onResize () {\n      const { calcSVGData } = this\n\n      calcSVGData()\n    },\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"],"sourceRoot":""}]}